// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Ventas.Moldels;

namespace Ventas.Context
{
    public partial class ventasContext : DbContext
    {
        public ventasContext()
        {
        }

        public ventasContext(DbContextOptions<ventasContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<MediosPagos> MediosPagos { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Provedores> Provedores { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Clientes>(entity =>
            {
                entity.HasKey(e => e.IdCliente)
                    .HasName("PK__clientes__677F38F5C6A65D21");

                entity.ToTable("clientes");

                entity.Property(e => e.IdCliente).HasColumnName("id_cliente");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("apellido");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.FkMediosPagos).HasColumnName("fk_medios_pagos");

                entity.Property(e => e.FkProducto).HasColumnName("fk_producto");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("telefono");

                entity.HasOne(d => d.FkMediosPagosNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.FkMediosPagos)
                    .HasConstraintName("FK__clientes__fk_med__2C3393D0");

                entity.HasOne(d => d.FkProductoNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.FkProducto)
                    .HasConstraintName("FK__clientes__fk_pro__2B3F6F97");
            });

            modelBuilder.Entity<MediosPagos>(entity =>
            {
                entity.ToTable("medios_pagos");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MedioPago)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("medio_pago");
            });

            modelBuilder.Entity<Productos>(entity =>
            {
                entity.ToTable("productos");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.imagen)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("imagen");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Provedor).HasColumnName("provedor");

                entity.Property(e => e.Valor).HasColumnName("valor");

                entity.HasOne(d => d.ProvedorNavigation)
                    .WithMany(p => p.Productos)
                    .HasForeignKey(d => d.Provedor)
                    .HasConstraintName("FK__productos__prove__286302EC");
            });

            modelBuilder.Entity<Provedores>(entity =>
            {
                entity.ToTable("provedores");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codigo_empresa");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}